"use strict";angular.module("signup").component("signup",{templateUrl:"partials/signup",controller:["$scope","$location",function(e,i){e.user={name:"",email:"",password:"",profilepic:""},e.video=document.getElementById("video");var o={video:!0},t=function(e){console.log("Video capture error: ",e.code)};navigator.getUserMedia?navigator.getUserMedia(o,function(e){video.src=e,video.play()},t):navigator.webkitGetUserMedia?navigator.webkitGetUserMedia(o,function(e){video.src=window.webkitURL.createObjectURL(e),video.play()},t):navigator.mozGetUserMedia&&navigator.mozGetUserMedia(o,function(e){video.src=window.URL.createObjectURL(e),video.play()},t),e.takepic=function(){var i=document.createElement("canvas");i.width=video.videoWidth,i.height=video.videoHeight,i.getContext("2d").drawImage(e.video,0,0,i.width,i.height),e.user.profilepic=i.toDataURL()},e.submitForm=function(){e.signupForm.$valid?i.path("required-documents"):console.log("Form Invalid")}}]});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNpZ251cC9zaWdudXAuY29tcG9uZW50LmpzIl0sIm5hbWVzIjpbImFuZ3VsYXIiLCJtb2R1bGUiLCJjb21wb25lbnQiLCJ0ZW1wbGF0ZVVybCIsImNvbnRyb2xsZXIiLCIkc2NvcGUiLCIkbG9jYXRpb24iLCJ1c2VyIiwibmFtZSIsImVtYWlsIiwicGFzc3dvcmQiLCJwcm9maWxlcGljIiwidmlkZW8iLCJkb2N1bWVudCIsImdldEVsZW1lbnRCeUlkIiwidmlkZW9PYmoiLCJlcnJCYWNrIiwiZXJyb3IiLCJjb25zb2xlIiwibG9nIiwiY29kZSIsIm5hdmlnYXRvciIsImdldFVzZXJNZWRpYSIsInN0cmVhbSIsInNyYyIsInBsYXkiLCJ3ZWJraXRHZXRVc2VyTWVkaWEiLCJ3aW5kb3ciLCJ3ZWJraXRVUkwiLCJjcmVhdGVPYmplY3RVUkwiLCJtb3pHZXRVc2VyTWVkaWEiLCJVUkwiLCJ0YWtlcGljIiwiY2FudmFzIiwiY3JlYXRlRWxlbWVudCIsIndpZHRoIiwidmlkZW9XaWR0aCIsImhlaWdodCIsInZpZGVvSGVpZ2h0IiwiZ2V0Q29udGV4dCIsImRyYXdJbWFnZSIsInRvRGF0YVVSTCIsInN1Ym1pdEZvcm0iLCJzaWdudXBGb3JtIiwiJHZhbGlkIiwicGF0aCJdLCJtYXBwaW5ncyI6IkFBR0EsWUFHQUEsU0FDQUMsT0FBTyxVQUNQQyxVQUFVLFVBQ05DLFlBQWEsa0JBQ2JDLFlBQWEsU0FBUyxZQUNsQixTQUEwQkMsRUFBT0MsR0FDN0JELEVBQU9FLE1BQU1DLEtBQUssR0FBR0MsTUFBTSxHQUFHQyxTQUFTLEdBQUdDLFdBQVcsSUFFckROLEVBQU9PLE1BQVFDLFNBQVNDLGVBQWUsUUFDdkMsSUFBSUMsSUFBYUgsT0FBUyxHQUN0QkksRUFBVSxTQUFTQyxHQUNmQyxRQUFRQyxJQUFJLHdCQUF5QkYsRUFBTUcsTUFJaERDLFdBQVVDLGFBQ1RELFVBQVVDLGFBQWFQLEVBQVUsU0FBU1EsR0FDdENYLE1BQU1ZLElBQU1ELEVBQ1pYLE1BQU1hLFFBQ1BULEdBQ0dLLFVBQVVLLG1CQUNoQkwsVUFBVUssbUJBQW1CWCxFQUFVLFNBQVNRLEdBQzVDWCxNQUFNWSxJQUFNRyxPQUFPQyxVQUFVQyxnQkFBZ0JOLEdBQzdDWCxNQUFNYSxRQUNQVCxHQUVDSyxVQUFVUyxpQkFDZFQsVUFBVVMsZ0JBQWdCZixFQUFVLFNBQVNRLEdBQ3pDWCxNQUFNWSxJQUFNRyxPQUFPSSxJQUFJRixnQkFBZ0JOLEdBQ3ZDWCxNQUFNYSxRQUNQVCxHQUVQWCxFQUFPMkIsUUFBVSxXQUNiLEdBQUlDLEdBQVNwQixTQUFTcUIsY0FBYyxTQUNwQ0QsR0FBT0UsTUFBUXZCLE1BQU13QixXQUNyQkgsRUFBT0ksT0FBU3pCLE1BQU0wQixZQUN0QkwsRUFBT00sV0FBVyxNQUNiQyxVQUFVbkMsRUFBT08sTUFBTyxFQUFHLEVBQUdxQixFQUFPRSxNQUFPRixFQUFPSSxRQUN4RGhDLEVBQU9FLEtBQUtJLFdBQWFzQixFQUFPUSxhQUVwQ3BDLEVBQU9xQyxXQUFhLFdBRVpyQyxFQUFPc0MsV0FBV0MsT0FDbEJ0QyxFQUFVdUMsS0FBTSxzQkFHaEIzQixRQUFRQyxJQUFJIiwiZmlsZSI6InNpZ251cC9zaWdudXAuY29tcG9uZW50LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDcmVhdGVkIGJ5IHdyazIyNCBvbiA3LzYvMTYuXG4gKi9cbid1c2Ugc3RyaWN0JztcblxuLy8gUmVnaXN0ZXIgYHNpZ251cGAgY29tcG9uZW50LCBhbG9uZyB3aXRoIGl0cyBhc3NvY2lhdGVkIGNvbnRyb2xsZXIgYW5kIHRlbXBsYXRlXG5hbmd1bGFyLlxubW9kdWxlKCdzaWdudXAnKS5cbmNvbXBvbmVudCgnc2lnbnVwJywge1xuICAgIHRlbXBsYXRlVXJsOiAncGFydGlhbHMvc2lnbnVwJyxcbiAgICBjb250cm9sbGVyOiBbJyRzY29wZScsJyRsb2NhdGlvbicsXG4gICAgICAgIGZ1bmN0aW9uIHNpZ251cENvbnRyb2xsZXIoJHNjb3BlLCRsb2NhdGlvbikge1xuICAgICAgICAgICAgJHNjb3BlLnVzZXI9e25hbWU6JycsZW1haWw6JycscGFzc3dvcmQ6JycscHJvZmlsZXBpYzonJ307XG5cbiAgICAgICAgICAgICRzY29wZS52aWRlbyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwidmlkZW9cIik7XG4gICAgICAgICAgICB2YXIgdmlkZW9PYmogPSB7IFwidmlkZW9cIjogdHJ1ZSB9O1xuICAgICAgICAgICAgdmFyIGVyckJhY2sgPSBmdW5jdGlvbihlcnJvcikge1xuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIlZpZGVvIGNhcHR1cmUgZXJyb3I6IFwiLCBlcnJvci5jb2RlKTtcbiAgICAgICAgICAgIH07XG5cbiAgICAgICAgICAgIC8vIFB1dCB2aWRlbyBsaXN0ZW5lcnMgaW50byBwbGFjZVxuICAgICAgICAgICAgaWYobmF2aWdhdG9yLmdldFVzZXJNZWRpYSkgeyAvLyBTdGFuZGFyZFxuICAgICAgICAgICAgICAgIG5hdmlnYXRvci5nZXRVc2VyTWVkaWEodmlkZW9PYmosIGZ1bmN0aW9uKHN0cmVhbSkge1xuICAgICAgICAgICAgICAgICAgICB2aWRlby5zcmMgPSBzdHJlYW07XG4gICAgICAgICAgICAgICAgICAgIHZpZGVvLnBsYXkoKTtcbiAgICAgICAgICAgICAgICB9LCBlcnJCYWNrKTtcbiAgICAgICAgICAgIH0gZWxzZSBpZihuYXZpZ2F0b3Iud2Via2l0R2V0VXNlck1lZGlhKSB7IC8vIFdlYktpdC1wcmVmaXhlZFxuICAgICAgICAgICAgICAgIG5hdmlnYXRvci53ZWJraXRHZXRVc2VyTWVkaWEodmlkZW9PYmosIGZ1bmN0aW9uKHN0cmVhbSl7XG4gICAgICAgICAgICAgICAgICAgIHZpZGVvLnNyYyA9IHdpbmRvdy53ZWJraXRVUkwuY3JlYXRlT2JqZWN0VVJMKHN0cmVhbSk7XG4gICAgICAgICAgICAgICAgICAgIHZpZGVvLnBsYXkoKTtcbiAgICAgICAgICAgICAgICB9LCBlcnJCYWNrKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2UgaWYobmF2aWdhdG9yLm1vekdldFVzZXJNZWRpYSkgeyAvLyBGaXJlZm94LXByZWZpeGVkXG4gICAgICAgICAgICAgICAgbmF2aWdhdG9yLm1vekdldFVzZXJNZWRpYSh2aWRlb09iaiwgZnVuY3Rpb24oc3RyZWFtKXtcbiAgICAgICAgICAgICAgICAgICAgdmlkZW8uc3JjID0gd2luZG93LlVSTC5jcmVhdGVPYmplY3RVUkwoc3RyZWFtKTtcbiAgICAgICAgICAgICAgICAgICAgdmlkZW8ucGxheSgpO1xuICAgICAgICAgICAgICAgIH0sIGVyckJhY2spO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgJHNjb3BlLnRha2VwaWMgPSBmdW5jdGlvbigpe1xuICAgICAgICAgICAgICAgIHZhciBjYW52YXMgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiY2FudmFzXCIpO1xuICAgICAgICAgICAgICAgIGNhbnZhcy53aWR0aCA9IHZpZGVvLnZpZGVvV2lkdGg7XG4gICAgICAgICAgICAgICAgY2FudmFzLmhlaWdodCA9IHZpZGVvLnZpZGVvSGVpZ2h0O1xuICAgICAgICAgICAgICAgIGNhbnZhcy5nZXRDb250ZXh0KCcyZCcpXG4gICAgICAgICAgICAgICAgICAgIC5kcmF3SW1hZ2UoJHNjb3BlLnZpZGVvLCAwLCAwLCBjYW52YXMud2lkdGgsIGNhbnZhcy5oZWlnaHQpO1xuICAgICAgICAgICAgICAgICRzY29wZS51c2VyLnByb2ZpbGVwaWMgPSBjYW52YXMudG9EYXRhVVJMKCk7XG4gICAgICAgICAgICB9O1xuICAgICAgICAgICAgJHNjb3BlLnN1Ym1pdEZvcm0gPSBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICAvLyBjaGVjayB0byBtYWtlIHN1cmUgdGhlIGZvcm0gaXMgY29tcGxldGVseSB2YWxpZFxuICAgICAgICAgICAgICAgIGlmICgkc2NvcGUuc2lnbnVwRm9ybS4kdmFsaWQpIHtcbiAgICAgICAgICAgICAgICAgICAgJGxvY2F0aW9uLnBhdGgoICdyZXF1aXJlZC1kb2N1bWVudHMnICk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2V7XG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiRm9ybSBJbnZhbGlkXCIpO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgfTtcbiAgICAgICAgfVxuICAgIF1cbn0pOyJdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ==
